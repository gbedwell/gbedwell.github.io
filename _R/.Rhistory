counts.end = n.counts)
)[3]
)
terms.time
rm(sum.exact.1000, sum.exact.2500, sum.exact.1000, sum.exact.500)
rm(sum.exact.1000, sum.exact.2500, sum.exact.5000, sum.exact.500)
terms.time <- data.frame(terms = c(5000, 2500, 1000, 500),
time = c(
system.time(
sum.exact.5000 <- nbconv::nb_sum_exact(mus = mus,
phis = phis,
n.terms = 5000,
counts.start = 0,
counts.end = n.counts))[3],
system.time(
sum.exact.2500 <- nbconv::nb_sum_exact(mus = mus,
phis = phis,
n.terms = 2500,
counts.start = 0,
counts.end = n.counts))[3],
system.time(
sum.exact.1000 <- nbconv::nb_sum_exact(mus = mus,
phis = phis,
n.terms = 1000,
counts.start = 0,
counts.end = n.counts))[3],
system.time(
sum.exact.500 <- nbconv::nb_sum_exact(mus = mus,
phis = phis,
n.terms = 500,
counts.start = 0,
counts.end = n.counts))[3]
)
)
terms.time
all(
all.equal(sum.exact.500,
sum.exact.5000),
all.equal(sum.exact.1000,
sum.exact.5000),
all.equal(sum.exact.2500,
sum.exact.5000)
)
.Machine$double.eps
all(
all.equal(target = sum.exact.500,
current = sum.exact.5000,
tolerance = .Machine$double.eps),
all.equal(target = sum.exact.1000,
current = sum.exact.5000,
tolerance = .Machine$double.eps),
all.equal(target = sum.exact.2500,
current = sum.exact.5000,
tolerance = .Machine$double.eps)
)
ggplot(data = terms.time, aes(x = terms, y = time)) +
geom_point(shape = 21, size = 2)
ggplot(data = terms.time, aes(x = terms, y = time)) +
geom_point(shape = 21, size = 2) +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 14)) +
labs(x = "Number of Terms", y = "Elapsed Time (s)")
ggplot(data = terms.time, aes(x = terms, y = time)) +
geom_line(size = 1) +
geom_point(shape = 21, size = 2) +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 14)) +
labs(x = "Number of Terms", y = "Elapsed Time (s)")
ggplot(data = terms.time, aes(x = terms, y = time)) +
geom_line(size = 0.75) +
geom_point(shape = 21, size = 3) +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 14)) +
labs(x = "Number of Terms", y = "Elapsed Time (s)")
ggplot(data = terms.time, aes(x = terms, y = time)) +
geom_line(size = 0.75, color = "gray75") +
geom_point(shape = 21, size = 4, fill = "gray25") +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 14)) +
labs(x = "Number of Terms", y = "Elapsed Time (s)")
ggplot(data = terms.time, aes(x = terms, y = time)) +
geom_line(size = 0.75, color = "gray75") +
geom_point(shape = 21, size = 4, fill = "gray50") +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 14)) +
labs(x = "Number of Terms", y = "Elapsed Time (s)")
ggplot(data = terms.time, aes(x = terms, y = time)) +
geom_line(size = 0.75, color = "gray75") +
geom_point(shape = 21, size = 3.5, fill = "gray50") +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 14)) +
labs(x = "Number of Terms", y = "Elapsed Time (s)")
ggplot(data = terms.time, aes(x = terms, y = time)) +
geom_line(size = 0.75, color = "gray75", linetype = "dashed") +
geom_point(shape = 21, size = 3.5, fill = "gray50") +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 14)) +
labs(x = "Number of Terms", y = "Elapsed Time (s)")
ggplot(data = terms.time, aes(x = terms, y = time)) +
geom_line(size = 0.75, color = "gray75", linetype = "dotted") +
geom_point(shape = 21, size = 3.5, fill = "gray50") +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 14)) +
labs(x = "Number of Terms", y = "Elapsed Time (s)")
ggplot(data = terms.time, aes(x = terms, y = time)) +
geom_line(size = 0.75, color = "gray75") +
geom_point(shape = 21, size = 3.5, fill = "gray50") +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 14)) +
labs(x = "Number of Terms", y = "Elapsed Time (s)")
all(
all.equal(target = sum.exact.500,
current = sum.exact.5000,
tolerance = .Machine$double.eps),
all.equal(target = sum.exact.1000,
current = sum.exact.5000,
tolerance = .Machine$double.eps),
all.equal(target = sum.exact.2500,
current = sum.exact.5000,
tolerance = .Machine$double.eps)
)
terms.time.plot <- ggplot(data = terms.time, aes(x = terms, y = time)) +
geom_line(size = 0.75, color = "gray75") +
geom_point(shape = 21, size = 3.5, fill = "gray50") +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 14)) +
labs(x = "Number of Terms", y = "Elapsed Time (s)")
terms.time.plot
5000/50
rm(sum.exact.1000)
sapply(X = c(1000),
FUN = function(x){
assign(paste0("sum.exact.", x) <- nbconv::nb_sum_exact(mus = mus,
phis = phis,
n.terms = 500,
counts.start = 0,
counts.end = n.counts))[3]
})
sapply(X = c(1000),
FUN = function(x){
assign(paste0("sum.exact.", x), value = nbconv::nb_sum_exact(mus = mus,
phis = phis,
n.terms = 500,
counts.start = 0,
counts.end = n.counts))[3]
})
sapply(X = c(1000),
FUN = function(x){
assign(paste0("sum.exact.", x), value = nbconv::nb_sum_exact(mus = mus,
phis = phis,
n.terms = 1000,
counts.start = 0,
counts.end = n.counts))[3]
})
sapply(X = c(1000),
FUN = function(x){
assign(paste0("sum.exact.", x), value = system.time(nbconv::nb_sum_exact(mus = mus,
phis = phis,
n.terms = 1000,
counts.start = 0,
counts.end = n.counts)))[3]
})
sapply(X = c(1000),
FUN = function(x){
system.time(
assign(x = paste0("sum.exact.", x),
value = nbconv::nb_sum_exact(mus = mus,
phis = phis,
n.terms = 1000,
counts.start = 0,
counts.end = n.counts)))[3]
}
)
sapply(X = c(500, 1000),
FUN = function(x){
system.time(
assign(x = paste0("sum.exact.", x),
value = nbconv::nb_sum_exact(mus = mus,
phis = phis,
n.terms = 1000,
counts.start = 0,
counts.end = n.counts)))[3]
}
)
sapply(X = c(500, 1000),
FUN = function(x){
system.time(
assign(x = paste0("sum.exact.", x),
value = nbconv::nb_sum_exact(mus = mus,
phis = phis,
n.terms = x,
counts.start = 0,
counts.end = n.counts)))[3]
}
)
sapply(X = c(500, 1000),
FUN = function(x){
system.time(
assign(x = paste0("sum.exact.", x),
value = nbconv::nb_sum_exact(mus = mus,
phis = phis,
n.terms = x,
counts.start = 0,
counts.end = n.counts),
inherits = TRUE))[3]
}
)
rm(sum.exact.5000, sum.exact.2500, sum.exact.1000, sum.exact.500)
terms.time <- data.frame(
terms = c(5000, 2500, 1000, 500),
time = c(
sapply(X = c(5000, 2500, 1000, 500),
FUN = function(x){
system.time(
assign(x = paste0("sum.exact.", x),
value = nbconv::nb_sum_exact(mus = mus,
phis = phis,
n.terms = x,
counts.start = 0,
counts.end = n.counts),
inherits = TRUE))[3]
}
)
)
)
View(terms.time)
terms.time.plot <- ggplot(data = terms.time, aes(x = terms, y = time)) +
geom_line(size = 0.75, color = "gray75") +
geom_point(shape = 21, size = 3.5, fill = "gray50") +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 14)) +
labs(x = "Number of Terms", y = "Elapsed Time (s)")
terms.time.plot
all(
all.equal(target = sum.exact.500,
current = sum.exact.5000,
tolerance = .Machine$double.eps),
all.equal(target = sum.exact.1000,
current = sum.exact.5000,
tolerance = .Machine$double.eps),
all.equal(target = sum.exact.2500,
current = sum.exact.5000,
tolerance = .Machine$double.eps)
)
View(terms.time)
terms.time.plot <- ggplot(data = terms.time, aes(x = terms, y = time)) +
geom_line(size = 0.75, color = "gray75") +
geom_point(shape = 21, size = 3.5, fill = "gray50") +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 14)) +
labs(x = "Number of Terms", y = "Elapsed Time (s)")
terms.time.plot
all(
all.equal(target = sum.exact.500,
current = sum.exact.5000,
tolerance = .Machine$double.eps),
all.equal(target = sum.exact.1000,
current = sum.exact.5000,
tolerance = .Machine$double.eps),
all.equal(target = sum.exact.2500,
current = sum.exact.5000,
tolerance = 10^-1000)
)
c(sum.exact.1000)
list(sum.exact.1000)
list(sum.exact.5000)
all.equal(c(1,2,3), c(1,2,3))
all.equal(c(1,2,3), c(1,2,4))
library(microbenchmark)
benchmark <- microbenchmark(
exact = { nb_sum_exact(mus = mus,
phis = phis,
n.terms = 500,
counts.start = 0,
counts.end = n.counts,
n.cores = 1) },
exact_parallel = { nb_sum_exact(mus = mus,
phis = phis,
n.terms = 500,
counts.start = 0,
counts.end = n.counts,
n.cores = 4) },
saddlepoint = { nb_sum_saddlepoint(mus = mus,
phis = phis,
counts.start = 0,
counts.end = n.counts,
normalize = TRUE) },
saddlepoint_parallel = { nb_sum_saddlepoint_parallel(mus = mus,
phis = phis,
counts.start = 0,
counts.end = n.counts,
normalize = TRUE,
n.cores = 4) },
moments = { nb_sum_moments(mus = mus,
phis = phis,
counts.start = 0,
counts.end = n.counts) },
)
nb_sum_exact(mus = mus,
phis = phis,
n.terms = 500,
counts.start = 0,
counts.end = n.counts,
n.cores = 1)
benchmark <- microbenchmark(
exact = { nb_sum_exact(mus = mus,
phis = phis,
n.terms = 500,
counts.start = 0,
counts.end = n.counts,
n.cores = 1) })
cat("Exact \n")
system.time(
sum.exact <- nb_exact(mus = mus,
phis = phis,
n.terms = 500,
counts.start = 0,
counts.end = n.counts,
n.cores = 1)
)
cat("Exact \n")
system.time(
sum.exact <- nb_sum_exact(mus = mus,
phis = phis,
n.terms = 500,
counts.start = 0,
counts.end = n.counts,
n.cores = 1)
)
cat("\n")
cat("Exact - Parallel \n")
system.time(
sum.exact.parallel <- nb_sum_exact(mus = mus,
phis = phis,
n.terms = 500,
counts.start = 0,
counts.end = n.counts,
n.cores = 4)
)
cat("\n")
cat("Saddlepoint \n")
system.time(
sum.saddlepoint <- nb_sum_saddlepoint(mus = mus,
phis = phis,
counts.start = 0,
counts.end = n.counts,
normalize = TRUE)
)
cat("\n")
cat("Saddlepoint - Parallel \n")
system.time(
sum.saddlepoint.parallel <- nb_sum_saddlepoint_parallel(mus = mus,
phis = phis,
counts.start = 0,
counts.end = n.counts,
normalize = TRUE,
log.scale = TRUE,
n.cores = 4)
)
cat("Exact \n")
system.time(
sum.exact <- nb_sum_exact(mus = mus,
phis = phis,
n.terms = 500,
counts.start = 0,
counts.end = n.counts,
n.cores = 1)
)
cat("\n")
cat("Exact - Parallel \n")
system.time(
sum.exact.parallel <- nb_sum_exact(mus = mus,
phis = phis,
n.terms = 500,
counts.start = 0,
counts.end = n.counts,
n.cores = 4)
)
cat("\n")
cat("Saddlepoint \n")
system.time(
sum.saddlepoint <- nb_sum_saddlepoint(mus = mus,
phis = phis,
counts.start = 0,
counts.end = n.counts,
normalize = TRUE)
)
cat("\n")
cat("Saddlepoint - Parallel \n")
system.time(
sum.saddlepoint.parallel <- nb_sum_saddlepoint_parallel(mus = mus,
phis = phis,
counts.start = 0,
counts.end = n.counts,
normalize = TRUE,
n.cores = 4)
)
sum.saddlepoint
plot(0:100000, sum.saddlepoint)
plot(0:100000, log(sum.saddlepoint))
set.seed(1000)
mus <- runif(25, min=1, max=5000)
set.seed(1000)
phis <- runif(25, min=1, max=20)
n.counts <- 250000
empirical.sum <- nbconv::nb_empirical_sum(mus = mus, phis = phis, n = 1e6)
empirical.mass <- stats::density(x = empirical.sum, from = 0, to = n.counts, n = n.counts + 1)$y
system.time(
sum.saddlepoint <- nb_sum_saddlepoint(mus = mus,
phis = phis,
counts.start = 0,
counts.end = n.counts,
normalize = TRUE)
)
plot(0:100000, log(sum.saddlepoint))
plot(0:250000, log(sum.saddlepoint))
set.seed(1000)
mus <- runif(25, min=1, max=5000)
set.seed(1000)
phis <- runif(25, min=1, max=15)
n.counts <- 200000
system.time(
sum.saddlepoint <- nb_sum_saddlepoint(mus = mus,
phis = phis,
counts.start = 0,
counts.end = n.counts,
normalize = TRUE)
)
plot(0:250000, log(sum.saddlepoint))
plot(0:200000, log(sum.saddlepoint))
plot(0:200000, log(sum.exact))
set.seed(1000)
mus <- runif(25, min=1, max=5000)
set.seed(1000)
phis <- runif(25, min=1, max=20)
n.counts <- 300000
empirical.sum <- nbconv::nb_empirical_sum(mus = mus, phis = phis, n = 1e6)
empirical.mass <- stats::density(x = empirical.sum, from = 0, to = n.counts, n = n.counts + 1)$y
plot(x = 0:300000, y = empirical.mass)
n.counts <- 200000
empirical.sum <- nbconv::nb_empirical_sum(mus = mus, phis = phis, n = 1e6)
empirical.mass <- stats::density(x = empirical.sum, from = 0, to = n.counts, n = n.counts + 1)$y
n.counts <- 100000
empirical.sum <- nbconv::nb_empirical_sum(mus = mus, phis = phis, n = 1e6)
empirical.mass <- stats::density(x = empirical.sum, from = 0, to = n.counts, n = n.counts + 1)$y
plot(x = 0:100000, y = empirical.mass)
set.seed(1000)
mus <- runif(25, min=1, max=5000)
set.seed(1000)
phis <- runif(25, min=1, max=20)
n.counts <- 150000
empirical.sum <- nbconv::nb_empirical_sum(mus = mus, phis = phis, n = 1e6)
empirical.mass <- stats::density(x = empirical.sum, from = 0, to = n.counts, n = n.counts + 1)$y
plot(x = 0:150000, y = empirical.mass)
set.seed(1000)
mus <- runif(25, min=1, max=5000)
set.seed(1000)
phis <- runif(25, min=1, max=20)
n.counts <- 125000
empirical.sum <- nbconv::nb_empirical_sum(mus = mus, phis = phis, n = 1e6)
empirical.mass <- stats::density(x = empirical.sum, from = 0, to = n.counts, n = n.counts + 1)$y
plot(x = 0:125000, y = log(empirical.mass))
cat("Exact \n")
system.time(
sum.exact <- nb_sum_exact(mus = mus,
phis = phis,
n.terms = 500,
counts.start = 0,
counts.end = n.counts,
n.cores = 1)
)
cat("\n")
cat("Exact - Parallel \n")
system.time(
sum.exact.parallel <- nb_sum_exact(mus = mus,
phis = phis,
n.terms = 500,
counts.start = 0,
counts.end = n.counts,
n.cores = 4)
)
cat("\n")
cat("Saddlepoint \n")
system.time(
sum.saddlepoint <- nb_sum_saddlepoint(mus = mus,
phis = phis,
counts.start = 0,
counts.end = n.counts,
normalize = TRUE)
)
cat("\n")
cat("Saddlepoint - Parallel \n")
system.time(
sum.saddlepoint.parallel <- nb_sum_saddlepoint_parallel(mus = mus,
phis = phis,
counts.start = 0,
counts.end = n.counts,
normalize = TRUE,
n.cores = 4)
)
