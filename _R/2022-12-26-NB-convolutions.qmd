---
title: Negative binomial convolutions
excerpt: Implementing exact expressions for the convolution of negative binomial distributions and alternative options.
classes: wide
format: gfm
output-file: ../_posts/2022-12-27-NB-convolutions.md
editor: source
keep-yaml: true
---

```{r, eval=FALSE}
download.file(url = "https://raw.githubusercontent.com/gbedwell/nb_convolutions/master/nbconv.R",
              destfile = "path/to/directory/nbconv.R")
```

```{r, eval=FALSE}
source("path/to/directory/nbconv.R")
```

```{r, echo=FALSE}
source("/Users/gbedwell/Documents/github/nbconv/nbconv.R")
```

```{r}
mus <- c(800, 1600)
phis <- c(10, 1)
ps <- phis/(phis + mus)
```

```{r}
out <- nbconv(rvec = phis, pvec = ps, nterms = 100, s=0:1000)
```

```{r, warnings = FALSE}
#library(rstan)
expose_stan_functions("/Users/gbedwell/Documents/github/nbconv/sum_nb_functions.stan",
                      show_compiler_warnings = FALSE)
```

```{r}
load_stan_functions <- function(path, compiler.warnings = FALSE){
  require(rstan)
  
  rstan::expose_stan_functions(path,
                               show_compiler_warnings = compiler.warnings)
}
```

```{r}
nb_saddlepoint <- function(mus, phis, ps, n.counts, normalize = TRUE) {
  require(rstan)
  
  if (!missing(mus)){
    if (!missing(ps)){
      stop("'mus' and 'ps' both specified",
           call. = FALSE) 
    }
  }
  
  if (missing(mus)){
    if (!missing(ps)){
      mus <- phis*(1 - ps)/ps
    }
    else{
      stop("One of 'mus' or 'ps' must be specified.",
           call. = FALSE)
    }
  }
  
  breaks = 0:n.counts
  
  log.mass <- sapply(X = seq_along(breaks),
                     FUN = function(x){
                       y <- x
                       log.mass <- neg_binomial_sum_saddlepoint_lpmf(y, mus, phis, dummy_x_r = array(0,0))
                       })
  
  if(any(is.na(log.mass))) {
      stop("NAs in log.mass values.")
    }
  
  saddlepoint.mass = exp(log.mass)
  
  if (saddlepoint.mass[n.counts + 1] > 1e-6){
    warning("The density values on the right side of the distribution are > 1e-6. Consider increasing n.counts.",
            .call = TRUE)
  }
  
  if (isTRUE(normalize)){
    saddlepoint.mass <- saddlepoint.mass/sum(saddlepoint.mass)
  }
  
  return(saddlepoint.mass)
}
```

```{r}
mu.moment <- sum(c(800, 1600))
phi.moment <- sum(c(800, 1600))^2/sum(c(800, 1600)^2/c(10, 1))

moments.masses <- dnbinom(x = 0:20000,
                          size = phi.moment,
                          mu = mu.moment)

plot(x = 0:20000, y = moments.masses)
```





